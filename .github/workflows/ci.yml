name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
      - feature/**
      - v[0-9]+.[0-9]+

env:
  GO_VERSION: "1.23"
  LINT_VERSION: "v1.63"

concurrency: 
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.run_id }}
  cancel-in-progress: true

jobs:
  go-code:
    strategy:
      fail-fast: false
    name: Go code checks
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@v3
    - name: Setup Go
      uses: actions/setup-go@v3
      with:
        go-version: ${{ env.GO_VERSION }}
        cache: true
    - name: run Go tidy
      run: make go-tidy
    - name: Run golangci-lint with cgo
      env:
        CGO_ENABLED: 1
      uses: golangci/golangci-lint-action@v3
      with:
        version: ${{ env.LINT_VERSION }}
        # https://github.com/golangci/golangci-lint-action/issues/244
        skip-cache: true
    - name: Run golangci-lint without cgo
      env:
        CGO_ENABLED: 0
      uses: golangci/golangci-lint-action@v3
      with:
        version: ${{ env.LINT_VERSION }}
        args: --build-tags no_cgo
        # https://github.com/golangci/golangci-lint-action/issues/244
        skip-cache: true
    - name: Run incorrect builds
      run: |
        echo "::remove-matcher owner=go::"
        make incorrect_builds

  c-code:
    strategy:
      fail-fast: false
    name: C code checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true
      - name: Install C formatter
        run: sudo apt-get install -y clang-format
      - name: run C format
        run: make c-format
      - name: run C sanitizers
        run: make c-sanitize
      

  unit-tests:
    name: Unit Tests
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true
      - name: Run tests
        env:
          RACE_FLAG: 1
          VERBOSE: 1
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 10
          max_attempts: 1
          command: make test
      - name: Upload coverage report
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.txt
          flags: unittests
          name: codecov-umbrella
